import pandas as pd
import re

# === Colunas que n√£o entram no fluxo de Not√≠cias ===
UNNECESSARY_COLUMNS = [
    "Descri√ß√£o monitoramento", "Link servi√ßo", "Descri√ß√£o Pai", "Link ocorr√™ncia Pai", "Thumbnail",
    "Thumbnail pai", "Data coleta", "Linguagem", "Foto publicador", "PageRank", "Estrelas",
    "Qualifica√ß√£o", "Qualificada por", "Data da qualifica√ß√£o", "Qualifica√ß√£o autom√°tica", "Para",
    "Manifesta√ß√µes", "Cidade/Estado", "Latitude", "Longitude", "Id ocorr√™ncia no servi√ßo",
    "Id ocorr√™ncia pai no servi√ßo", "Link id ocorr√™ncia pai", "Arquivada", "Desarquivada",
    "Data Resposta", "Manifesta√ß√µes Detalhadas", "Termos", "Links", "Perfis", "Hashtags",
    "comments", "shares", "likes", "dislikes", "love", "wow", "haha", "sad", "angry",
    "thankful", "pride", "retweets", "favorites", "rating", "vendas", "resenhas", "votes",
    "views", "quotes", "videoViews", "URL da busca", "Id publicador", "Qualifica√ß√£o aprovada por",
    "Analisada por", "Data analisada", "Avalia√ß√£o", "Tipo/Conte√∫do", "Observa√ß√£o", "Unnamed: 73"
]

def export_for_iramuteq(df: pd.DataFrame, txt_filename: str):
    """Gera arquivo de corpus para IRAMUTEQ a partir de T√≠tulo + Descri√ß√£o."""
    def clean_text(text):
        return re.sub(r'[\|:\*"\?<>\|\$\-\'%]', '', str(text))
    lines = []
    for _, row in df.iterrows():
        id_    = row.get("ID", "")
        titulo = row.get("T√≠tulo", "")
        descr  = clean_text(row.get("Descri√ß√£o", ""))
        lines.append(f"**** *id_{id_} *u_{titulo}\n{descr}\n")
    with open(txt_filename, "w", encoding="utf-8") as f:
        f.writelines(lines)
    print(f"üßæ IRAMUTEQ salvo em: {txt_filename}")

def add_analysis_column_and_export_txt(df: pd.DataFrame, txt_filename: str):
    """Cria coluna An√°lise no formato desejado e exporta TXT."""
    for col in ["ID", "T√≠tulo", "Descri√ß√£o", "Link ocorr√™ncia"]:
        if col not in df.columns:
            df[col] = ""
    df["An√°lise"] = (
        df["ID"].astype(str)
        + " | T√≠tulo: " + df["T√≠tulo"].astype(str)
        + " | Texto: "  + df["Descri√ß√£o"].astype(str)
        + " | Link: "   + df["Link ocorr√™ncia"].astype(str)
    )
    df["An√°lise"].to_csv(txt_filename, index=False, header=False)
    print(f"üìù An√°lise TXT salvo em: {txt_filename}")
    return df

def process_and_export_excel(filepath: str, output_filename: str) -> pd.DataFrame:
    """
    1) L√™ sheet 'Ocorr√™ncias' (skiprows=4)
    2) Insere coluna ID
    3) Remove colunas UNNECESSARY_COLUMNS
    4) Exporta .txt de An√°lise e _iramuteq.txt
    5) Salva Excel limpo
    """
    print(f"üìÇ Processando Not√≠cias: {filepath}")
    df = pd.read_excel(filepath, sheet_name="Ocorr√™ncias", skiprows=4)
    df.columns = df.columns.str.replace('"', '').str.strip()
    df.insert(0, "ID", range(1, len(df) + 1))

    # limpeza
    df = df.drop(columns=set(UNNECESSARY_COLUMNS).intersection(df.columns), errors="ignore")
    df = df.replace("-", "NA").dropna(axis=1, how="all")

    # gera An√°lise e IRAMUTEQ
    txt_analysis = output_filename.replace(".xlsx", ".txt")
    df = add_analysis_column_and_export_txt(df, txt_analysis)

    txt_iram = output_filename.replace(".xlsx", "_iramuteq.txt")
    export_for_iramuteq(df, txt_iram)

    # salva Excel
    df.to_excel(output_filename, index=False)
    print(f"‚úÖ Excel de Not√≠cias salvo em: {output_filename}")
    return df
